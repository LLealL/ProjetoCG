/*
 * SimpleGLCanvas.java
 *
 * Created on 30. Juli 2008, 16:18
 */

package org.yourorghere;

import com.sun.opengl.util.Animator;
import java.awt.Checkbox;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import static java.awt.event.ItemEvent.SELECTED;
import java.awt.event.ItemListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionAdapter;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import static java.lang.Math.abs;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.media.opengl.GLCanvas;
import javax.media.opengl.GLCapabilities;
import javax.media.opengl.GLException;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.UIManager;
import javax.swing.WindowConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.yourorghere.figuras.Figura;
import org.yourorghere.figuras.Poligono;
import org.yourorghere.figuras.Quadrilatero;
import org.yourorghere.figuras.Triangulo;
import org.yourorghere.figuras.Util.RGB;
import org.yourorghere.figuras.persistence.BancoFiguras;
import org.yourorghere.transforms.Escala;
import org.yourorghere.transforms.TransformStack;
import org.yourorghere.transforms.*;

/**
 *
 * @author cylab
 * @author mbien
 */
public class Paint extends JFrame {
    private BancoFiguras figuras;
    private Figura f;
    private static int i = 1;
    private static int t = 1;
    private static int q = 1;
    private static int p = 1;
    private static float oldx=0;
    private static float oldy=0;
    GLRenderer renderer;
     private File curDir;
        
    static {
        // When using a GLCanvas, we have to set the Popup-Menues to be HeavyWeight,
        // so they display properly on top of the GLCanvas
        JPopupMenu.setDefaultLightWeightPopupEnabled(false);
    }
    
    private Animator animator;

    /** Creates new form MainFrame */
    public Paint() {
        initComponents();
        setTitle("Projeto CG");
        
        renderer= new GLRenderer();
        canvas.addGLEventListener(renderer);
        animator = new Animator(canvas);

        // This is a workaround for the GLCanvas not adjusting its size, when the frame is resized.
        canvas.setMinimumSize(new Dimension()); 
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                // Run this on another thread than the AWT event queue to
                // make sure the call to Animator.stop() completes before
                // exiting
                new Thread(new Runnable() {

                    public void run() {
                        animator.stop();
                        System.exit(0);
                    }
                }).start();
            }
        });
        animator.start();
    }

    @Override
    public void setVisible(boolean show){
        if(!show)
            animator.stop();
        super.setVisible(show);
        if(!show)
            animator.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list1 = new List();
        jToggleButton1 = new JToggleButton();
        canvas = new GLCanvas(createGLCapabilites());
        Listagem = new List();
        jButton7 = new JButton();
        resetCambtn = new JButton();
        fantasma = new Checkbox();
        jPanel3 = new JPanel();
        translateBtn = new JButton();
        translateZ = new JTextField();
        translateY = new JTextField();
        translateX = new JTextField();
        jLabel2 = new JLabel();
        jPanel4 = new JPanel();
        scaleBtn = new JButton();
        scaleZ = new JTextField();
        scaleY = new JTextField();
        scaleX = new JTextField();
        jLabel3 = new JLabel();
        jPanel6 = new JPanel();
        rotateBtn = new JButton();
        rotateZ = new JTextField();
        rotateY = new JTextField();
        rotateX = new JTextField();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        cisX = new JTextField();
        cisY = new JTextField();
        cisZ = new JTextField();
        cisXBtn = new JButton();
        cisYBtn = new JButton();
        cisZBtn = new JButton();
        jPanel2 = new JPanel();
        jLabel4 = new JLabel();
        xyGrid = new JCheckBox();
        xzGrid = new JCheckBox();
        yzGrid = new JCheckBox();
        jMenuBar1 = new JMenuBar();
        jMenu1 = new JMenu();
        loadOBJItem = new JMenuItem();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        canvas.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        canvas.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                canvasMouseClicked(evt);
            }
        });
        canvas.addMouseMotionListener(new MouseMotionAdapter() {
            public void mouseDragged(MouseEvent evt) {
                canvasMouseDragged(evt);
            }
        });
        canvas.addMouseWheelListener(new MouseWheelListener() {
            public void mouseWheelMoved(MouseWheelEvent evt) {
                canvasMouseWheelMoved(evt);
            }
        });
        canvas.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                canvasKeyPressed(evt);
            }
        });

        Listagem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                ListagemActionPerformed(evt);
            }
        });

        jButton7.setText("Executar");
        jButton7.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        resetCambtn.setText("Reset Cenario");
        resetCambtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                resetCambtnActionPerformed(evt);
            }
        });

        fantasma.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        fantasma.setFont(new Font("Tahoma", 0, 13)); // NOI18N
        fantasma.setLabel("Fantasma");
        fantasma.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                fantasmaItemStateChanged(evt);
            }
        });

        translateBtn.setText("adicionar");
        translateBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                translateBtnActionPerformed(evt);
            }
        });

        translateZ.setText("z");

        translateY.setText("y");
        translateY.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                translateYActionPerformed(evt);
            }
        });

        translateX.setText("x");
        translateX.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                translateXActionPerformed(evt);
            }
        });

        jLabel2.setFont(new Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Transladar");

        scaleBtn.setText("adicionar");
        scaleBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                scaleBtnActionPerformed(evt);
            }
        });

        scaleZ.setText("z");

        scaleY.setText("y");
        scaleY.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                scaleYActionPerformed(evt);
            }
        });

        scaleX.setText("x");
        scaleX.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                scaleXActionPerformed(evt);
            }
        });

        jLabel3.setFont(new Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Escala");

        rotateBtn.setText("adicionar");
        rotateBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                rotateBtnActionPerformed(evt);
            }
        });

        rotateZ.setText("z");

        rotateY.setText("y");
        rotateY.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                rotateYActionPerformed(evt);
            }
        });

        rotateX.setText("x");
        rotateX.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                rotateXActionPerformed(evt);
            }
        });

        jLabel5.setFont(new Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Rotação");

        jLabel6.setText("Cisalhar");

        cisX.setText("x");
        cisX.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cisXActionPerformed(evt);
            }
        });

        cisY.setText("y");
        cisY.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cisYActionPerformed(evt);
            }
        });

        cisZ.setText("z");

        cisXBtn.setText("CisalharX");
        cisXBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cisXBtnActionPerformed(evt);
            }
        });

        cisYBtn.setText("CisalharY");
        cisYBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cisYBtnActionPerformed(evt);
            }
        });

        cisZBtn.setText("CisalharZ");
        cisZBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cisZBtnActionPerformed(evt);
            }
        });

        GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(rotateBtn, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(Alignment.TRAILING, false)
                            .addComponent(jLabel5, GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(rotateX, Alignment.LEADING)
                            .addComponent(rotateY, Alignment.LEADING)
                            .addComponent(rotateZ, Alignment.LEADING))
                        .addGroup(jPanel6Layout.createParallelGroup(Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(Alignment.TRAILING, false)
                                    .addComponent(cisY, Alignment.LEADING)
                                    .addComponent(cisZ, Alignment.LEADING)
                                    .addComponent(cisX, GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(Alignment.LEADING)
                                    .addComponent(cisXBtn)
                                    .addComponent(cisYBtn)
                                    .addComponent(cisZBtn))))
                        .addGap(195, 195, 195))))
        );
        jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(rotateX, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cisX, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cisXBtn))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(rotateY, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cisY, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cisYBtn))
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(rotateZ, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cisZ, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cisZBtn))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(rotateBtn)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(Alignment.TRAILING, false)
                    .addComponent(scaleBtn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scaleX, Alignment.LEADING)
                    .addComponent(scaleY, Alignment.LEADING)
                    .addComponent(scaleZ, Alignment.LEADING)
                    .addComponent(jLabel3, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jPanel6, GroupLayout.PREFERRED_SIZE, 222, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(scaleX, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(scaleY, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(scaleZ, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(scaleBtn)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(Alignment.TRAILING, false)
                    .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(translateBtn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(translateX, Alignment.LEADING)
                    .addComponent(translateY, Alignment.LEADING)
                    .addComponent(translateZ, Alignment.LEADING))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(translateX, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(translateY, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(translateZ, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.UNRELATED)
                        .addComponent(translateBtn))
                    .addComponent(jPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        );

        jLabel4.setText("Malha:");

        xyGrid.setText("Plano XY");
        xyGrid.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                xyGridItemStateChanged(evt);
            }
        });
        xyGrid.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                xyGridActionPerformed(evt);
            }
        });

        xzGrid.setText("Plano XZ");
        xzGrid.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                xzGridItemStateChanged(evt);
            }
        });
        xzGrid.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                xzGridActionPerformed(evt);
            }
        });

        yzGrid.setText("Plano YZ");
        yzGrid.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                yzGridItemStateChanged(evt);
            }
        });
        yzGrid.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                yzGridActionPerformed(evt);
            }
        });

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(xyGrid)
                    .addComponent(xzGrid)
                    .addComponent(yzGrid))
                .addGap(0, 60, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(xyGrid)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(xzGrid)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(yzGrid)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        loadOBJItem.setText("Load OBJ File");
        loadOBJItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                loadOBJItemActionPerformed(evt);
            }
        });
        jMenu1.add(loadOBJItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resetCambtn)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(canvas, GroupLayout.PREFERRED_SIZE, 500, GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fantasma, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addComponent(Listagem, GroupLayout.PREFERRED_SIZE, 174, GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(canvas, GroupLayout.PREFERRED_SIZE, 500, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(Alignment.LEADING)
                            .addComponent(resetCambtn)
                            .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Listagem, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(Alignment.LEADING)
                            .addComponent(fantasma, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, Alignment.TRAILING))
                        .addGap(28, 28, 28)
                        .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void canvasMouseClicked(MouseEvent evt) {//GEN-FIRST:event_canvasMouseClicked

    }//GEN-LAST:event_canvasMouseClicked

    private void ListagemActionPerformed(ActionEvent evt) {//GEN-FIRST:event_ListagemActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ListagemActionPerformed

    private void translateYActionPerformed(ActionEvent evt) {//GEN-FIRST:event_translateYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_translateYActionPerformed

    private void translateXActionPerformed(ActionEvent evt) {//GEN-FIRST:event_translateXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_translateXActionPerformed

    private void scaleYActionPerformed(ActionEvent evt) {//GEN-FIRST:event_scaleYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scaleYActionPerformed

    private void scaleXActionPerformed(ActionEvent evt) {//GEN-FIRST:event_scaleXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scaleXActionPerformed

    private void rotateYActionPerformed(ActionEvent evt) {//GEN-FIRST:event_rotateYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rotateYActionPerformed

    private void rotateXActionPerformed(ActionEvent evt) {//GEN-FIRST:event_rotateXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rotateXActionPerformed

    private void cisXActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cisXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cisXActionPerformed

    private void cisYActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cisYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cisYActionPerformed

    private void formKeyPressed(KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed

    private void canvasKeyPressed(KeyEvent evt) {//GEN-FIRST:event_canvasKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyChar()=='W'||evt.getKeyChar()=='w'){
            GLRenderer.moveCam(0.0f, -0.1f, 0.0f);
        }else if(evt.getKeyChar()=='S'||evt.getKeyChar()=='s'){
            GLRenderer.moveCam(0.0f, 0.1f, 0f);
        }else if(evt.getKeyChar()=='A'||evt.getKeyChar()=='a'){
            GLRenderer.moveCam(0.1f, 0f, 0f);
        }else if(evt.getKeyChar()=='D'||evt.getKeyChar()=='d'){
            GLRenderer.moveCam(-0.1f,0f,0f);
        }
    }//GEN-LAST:event_canvasKeyPressed

    private void canvasMouseWheelMoved(MouseWheelEvent evt) {//GEN-FIRST:event_canvasMouseWheelMoved
        // TODO add your handling code here:
        int notches = evt.getWheelRotation();
        if(evt.getScrollType()==MouseWheelEvent.WHEEL_UNIT_SCROLL){
            GLRenderer.moveCam(0f, 0f, notches*-0.1f);
        }
    }//GEN-LAST:event_canvasMouseWheelMoved

    private void resetCambtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_resetCambtnActionPerformed
       renderer.resetCam();
       TransformStack t= TransformStack.getInstance();
       t.clearStack();
    }//GEN-LAST:event_resetCambtnActionPerformed

    private void canvasMouseDragged(MouseEvent evt) {//GEN-FIRST:event_canvasMouseDragged
        // TODO add your handling code here:
        float x = evt.getX();
        float y= evt.getY();
        
        if(abs(x-oldx)<abs(y-oldy)){
            if(y-oldy<0){
                GLRenderer.rotateCam(1, 0, 0);
            }else if(y-oldy>0){
                GLRenderer.rotateCam(-1, 0, 0);
            }
            oldx=x;
            oldy=y;
        }else if(abs(x-oldx)>abs(y-oldy)){
            if(x-oldx<0){
                GLRenderer.rotateCam(0, 1, 0);
            }else if(x-oldx>0){
                GLRenderer.rotateCam(0,-1, 0);
            }
            oldx=x;
            oldy=y;
        }else{
            
        }
       
        
        //Renderer.rotateCam(1, 1, 1);
        
    }//GEN-LAST:event_canvasMouseDragged

    private void rotateBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_rotateBtnActionPerformed
        // TODO add your handling code here:
        TransformStack t= TransformStack.getInstance();
        try{
            float x= Float.parseFloat(rotateX.getText());
            float y= Float.parseFloat(rotateY.getText());
            float z= Float.parseFloat(rotateZ.getText());
            if(x!=0){
                t.addTransform(new RotateX(x));
                Listagem.add("Rotate(X,"+x+")");
            }
            if(y!=0){
                t.addTransform(new RotateY(y));
                Listagem.add("Rotate(Y,"+y+")");
            }
            if(z!=0){
                t.addTransform(new RotateZ(z));
                Listagem.add("Rotate(Z,"+z+")");
            }            
        }catch(NumberFormatException e){
            System.out.println("input mal formado!");
        }
    }//GEN-LAST:event_rotateBtnActionPerformed

    private void scaleBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_scaleBtnActionPerformed
        // TODO add your handling code here:
        TransformStack t= TransformStack.getInstance();
        try{
            float x= Float.parseFloat(scaleX.getText());
            float y= Float.parseFloat(scaleY.getText());
            float z= Float.parseFloat(scaleZ.getText());
            t.addTransform(new Escala(x,y,z));
            Listagem.add("Escala("+x+","+y+","+z+")");
            
        }catch(NumberFormatException e){
            System.out.println("input mal formado!");
        }
    }//GEN-LAST:event_scaleBtnActionPerformed

    private void translateBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_translateBtnActionPerformed
        TransformStack t= TransformStack.getInstance();
        try{
            float x= Float.parseFloat(translateX.getText());
            float y= Float.parseFloat(translateY.getText());
            float z= Float.parseFloat(translateZ.getText());
            t.addTransform(new Transladar(x,y,z));
            Listagem.add("Translate("+x+","+y+","+z+")");
            
        }catch(NumberFormatException e){
            System.out.println("input mal formado!");
        }
    }//GEN-LAST:event_translateBtnActionPerformed

    private void cisXBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cisXBtnActionPerformed
        // TODO add your handling code here:
        TransformStack t= TransformStack.getInstance();
        try{
            float sy= Float.parseFloat(cisY.getText());
            float sz= Float.parseFloat(cisZ.getText());
            t.addTransform(new CisalharX(sy,sz));
            Listagem.add("Cisalhar(X,"+sy+","+sz+")");
            
        }catch(NumberFormatException e){
            System.out.println("input mal formado!");
        }
    }//GEN-LAST:event_cisXBtnActionPerformed

    private void cisYBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cisYBtnActionPerformed
        // TODO add your handling code here:
        TransformStack t= TransformStack.getInstance();
        try{
            float sx= Float.parseFloat(cisX.getText());
            float sz= Float.parseFloat(cisZ.getText());
            t.addTransform(new CisalharY(sx,sz));
            Listagem.add("Cisalhar(Y,"+sx+","+sz+")");
            
        }catch(NumberFormatException e){
            System.out.println("input mal formado!");
        }        
    }//GEN-LAST:event_cisYBtnActionPerformed

    private void cisZBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cisZBtnActionPerformed
        // TODO add your handling code here:
        TransformStack t= TransformStack.getInstance();
        try{
            Float sx= Float.parseFloat(cisX.getText());
            Float sy= Float.parseFloat(cisY.getText());
            t.addTransform(new CisalharZ(sx,sy));
            Listagem.add("Cisalhar(Z,"+sx+","+sy+")");
            
        }catch(NumberFormatException e){
            System.out.println("input mal formado!");
        }
    }//GEN-LAST:event_cisZBtnActionPerformed

    private void jButton7ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        GLRenderer.TransformOn(true);
        Listagem.removeAll();
        TransformStack t = TransformStack.getInstance();
        renderer.newTransformState();
       
    }//GEN-LAST:event_jButton7ActionPerformed

    private void xyGridActionPerformed(ActionEvent evt) {//GEN-FIRST:event_xyGridActionPerformed

    }//GEN-LAST:event_xyGridActionPerformed

    private void xyGridItemStateChanged(ItemEvent evt) {//GEN-FIRST:event_xyGridItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED){
            GLRenderer.OpenGridXY();
        }else{
            GLRenderer.CloseGridXY();
        }
    }//GEN-LAST:event_xyGridItemStateChanged

    private void xzGridItemStateChanged(ItemEvent evt) {//GEN-FIRST:event_xzGridItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED){
            GLRenderer.OpenGridXZ();
        }else{
            GLRenderer.CloseGridXZ();
        }
    }//GEN-LAST:event_xzGridItemStateChanged

    private void yzGridItemStateChanged(ItemEvent evt) {//GEN-FIRST:event_yzGridItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED){
            GLRenderer.OpenGridZY();
        }else{
            GLRenderer.CloseGridZY();
        }
    }//GEN-LAST:event_yzGridItemStateChanged

    private void fantasmaItemStateChanged(ItemEvent evt) {//GEN-FIRST:event_fantasmaItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            GLRenderer.criarFantasma();

        }else{
            GLRenderer.desativarFantasma();
        }
    }//GEN-LAST:event_fantasmaItemStateChanged

    private void loadOBJItemActionPerformed(ActionEvent evt) {//GEN-FIRST:event_loadOBJItemActionPerformed
        JFileChooser chooser = new JFileChooser(curDir);
        int res = chooser.showOpenDialog(null);       
        if (res == JFileChooser.APPROVE_OPTION) {
            File chosen = chooser.getSelectedFile();
            if (chosen != null) {
              curDir = chosen.getParentFile();
             GLRenderer.changeModel(chosen);
             
            }
          }
    }//GEN-LAST:event_loadOBJItemActionPerformed

    private void xzGridActionPerformed(ActionEvent evt) {//GEN-FIRST:event_xzGridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xzGridActionPerformed

    private void yzGridActionPerformed(ActionEvent evt) {//GEN-FIRST:event_yzGridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yzGridActionPerformed

    
    
    
  /**
     * Called from within initComponents().
     * hint: to customize the generated code choose 'Customize Code' in the contextmenu
//     * of the selected UI Component you wish to cutomize in design mode.
     * @return Returns customized GLCapabilities.
     */
    private GLCapabilities createGLCapabilites() {
        
        GLCapabilities capabilities = new GLCapabilities();
        capabilities.setHardwareAccelerated(true);

        // try to enable 2x anti aliasing - should be supported on most hardware
        capabilities.setNumSamples(2);
        capabilities.setSampleBuffers(true);
        
        return capabilities;
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        // Run this in the AWT event thread to prevent deadlocks and race conditions
        EventQueue.invokeLater(new Runnable() {
            public void run() {

                // switch to system l&f for native font rendering etc.
                try{
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                }catch(Exception ex) {
                    Logger.getLogger(getClass().getName()).log(Level.INFO, "can not enable system look and feel", ex);
                }

                Paint frame = new Paint();
                frame.show();
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private List Listagem;
    private GLCanvas canvas;
    private JTextField cisX;
    private JButton cisXBtn;
    private JTextField cisY;
    private JButton cisYBtn;
    private JTextField cisZ;
    private JButton cisZBtn;
    private Checkbox fantasma;
    private JButton jButton7;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JMenu jMenu1;
    private JMenuBar jMenuBar1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JPanel jPanel6;
    private JToggleButton jToggleButton1;
    private List list1;
    private JMenuItem loadOBJItem;
    private JButton resetCambtn;
    private JButton rotateBtn;
    private JTextField rotateX;
    private JTextField rotateY;
    private JTextField rotateZ;
    private JButton scaleBtn;
    private JTextField scaleX;
    private JTextField scaleY;
    private JTextField scaleZ;
    private JButton translateBtn;
    private JTextField translateX;
    private JTextField translateY;
    private JTextField translateZ;
    private JCheckBox xyGrid;
    private JCheckBox xzGrid;
    private JCheckBox yzGrid;
    // End of variables declaration//GEN-END:variables
}